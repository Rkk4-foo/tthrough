// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TThrough.data;

#nullable disable

namespace TThrough.Migrations
{
    [DbContext(typeof(TalkthroughContext))]
    [Migration("20250510133506_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TThrough.mvvm.Models.Amigos", b =>
                {
                    b.Property<string>("IdUsuarioEnvio")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1);

                    b.Property<string>("IdUsuarioRemitente")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(2);

                    b.Property<bool>("SolicitudAceptada")
                        .HasColumnType("bit");

                    b.HasKey("IdUsuarioEnvio", "IdUsuarioRemitente");

                    b.HasIndex("IdUsuarioRemitente");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Llamada", b =>
                {
                    b.Property<string>("IdLlamada")
                        .HasColumnType("varchar(40)");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("IdLlamada");

                    b.ToTable("Llamadas");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.LlamadaUsuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1);

                    b.Property<string>("IdLlamada")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FechaLlamada")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUsuario", "IdLlamada");

                    b.HasIndex("IdLlamada");

                    b.ToTable("LlamadasUsuarios");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Mensaje", b =>
                {
                    b.Property<string>("IdMensaje")
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEnvio")
                        .HasColumnType("datetime2");

                    b.HasKey("IdMensaje");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.MensajeUsuario", b =>
                {
                    b.Property<string>("IdMensaje")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(1);

                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(40)")
                        .HasColumnOrder(2);

                    b.HasKey("IdMensaje", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MensajesUsuarios");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombrePublico")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Amigos", b =>
                {
                    b.HasOne("TThrough.mvvm.Models.Usuario", "UsuarioPeticion")
                        .WithMany()
                        .HasForeignKey("IdUsuarioEnvio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TThrough.mvvm.Models.Usuario", "UsuarioRemitente")
                        .WithMany()
                        .HasForeignKey("IdUsuarioRemitente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioPeticion");

                    b.Navigation("UsuarioRemitente");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.LlamadaUsuario", b =>
                {
                    b.HasOne("TThrough.mvvm.Models.Llamada", "Llamada")
                        .WithMany("LlamadasUsuario")
                        .HasForeignKey("IdLlamada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TThrough.mvvm.Models.Usuario", "Usuario")
                        .WithMany("LlamadasUsuario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Llamada");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.MensajeUsuario", b =>
                {
                    b.HasOne("TThrough.mvvm.Models.Mensaje", "Mensaje")
                        .WithMany("MensajesUsuarios")
                        .HasForeignKey("IdMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TThrough.mvvm.Models.Usuario", "Usuario")
                        .WithMany("MensajeUsuario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mensaje");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Llamada", b =>
                {
                    b.Navigation("LlamadasUsuario");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Mensaje", b =>
                {
                    b.Navigation("MensajesUsuarios");
                });

            modelBuilder.Entity("TThrough.mvvm.Models.Usuario", b =>
                {
                    b.Navigation("LlamadasUsuario");

                    b.Navigation("MensajeUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
